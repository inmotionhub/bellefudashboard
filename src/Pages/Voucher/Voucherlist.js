

import {
    Paper, TableRow, TableHead,
    TableContainer, TableCell,
    Typography, Box,
    Toolbar, TableBody,
    Button, Table,
    TablePagination,
} from "@mui/material";
import { useNavigate } from "react-router-dom";
import { useState, useEffect } from "react";
import moment from "moment";
import { colors, PageTitle, CircularIndeterminate, APIDATA } from "../../Constant"
import axios from "axios";





export default function AdminList() {
    const [page, setPage] = useState(0);
    const [rowsPerPage, setRowsPerPage] = useState(10);
    const [program, setProgram] = useState(null)





    const navigate = useNavigate()
    const handleChangePage = (event, newPage) => {
        setPage(newPage);
    };

    const handleChangeRowsPerPage = (event) => {
        setRowsPerPage(+event.target.value);
        setPage(0);
    };

    useEffect(() => {

        const getprogram = async () => {
            await axios.get(`${APIDATA}view/voucher`)
                .then(res => setProgram(res.data.data.data))
                .catch(err => console.log(err))
        }

        getprogram()
    }, [])


    return (
        <Box>
            <Box style={{ display: "flex", justifyContent: "space-between" }}>
                <PageTitle title="Voucher List" variant="h4" component="h2" />

                <Button
                    variant="contained"
                    onClick={() => navigate('/createvoucher')}
                    style={{ backgroundColor: colors.secondary }}
                >
                    Create Voucher
                </Button>
            </Box>
            <Toolbar />
            <TableContainer component={Paper}>
                <Table sx={{ minWidth: 650 }} aria-label="simple table">
                    <TableHead>
                        <TableRow sx={{ bgcolor: '#76ba1b' }}>

                            <TableCell sx={{ color: '#ffff' }} >
                                <strong>Date</strong>
                            </TableCell >
                            <TableCell sx={{ color: '#ffff' }} >
                                <strong>Generated By</strong>
                            </TableCell>
                            <TableCell sx={{ color: '#ffff' }}>
                                <strong>Code</strong>
                            </TableCell>
                            <TableCell sx={{ color: '#ffff' }}>
                                <strong>Amount</strong>
                            </TableCell>
                            <TableCell sx={{ color: '#ffff' }}>
                                <strong>Consumed by</strong>
                            </TableCell>
                            <TableCell sx={{ color: '#ffff' }}>
                                <strong>Status</strong>
                            </TableCell>

                        </TableRow>
                    </TableHead>
                    <TableBody>
                        {program === null ? <CircularIndeterminate /> : program
                            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)
                            .map((row) => (
                                <TableRow
                                    key={row.id}
                                    sx={{ "&:last-child td, &:last-child th": { border: 0 } }}
                                >
                                    <TableCell component="th" scope="row">
                                        {moment(row.created_at).format('l')}

                                    </TableCell>
                                    <TableCell >#{row.generated_by}</TableCell>
                                    <TableCell >{row.code}</TableCell>
                                    <TableCell >{row.amount}</TableCell>
                                    <TableCell >{row.consumed_by === null ?
                                        <Typography sx={{ color: 'white', borderRadius: '5px', textAlign: 'center', width: '7vw', padding: '3px', bgcolor: 'green' }}>Active</Typography> : row.consumed_by}</TableCell>
                                    <TableCell >{row.status === 'consumed' ?
                                        <Typography sx={{ color: 'white', borderRadius: '5px', textAlign: 'center', width: '7vw', padding: '3px', bgcolor: 'green' }}>Consumed</Typography> :
                                        <Typography sx={{ color: 'white', borderRadius: '5px', textAlign: 'center', width: '7vw', padding: '3px', bgcolor: 'blue' }}>Created</Typography>}</TableCell>

                                </TableRow>
                            ))}
                    </TableBody>
                </Table>
                <TablePagination
                    rowsPerPageOptions={[10, 25, 200]}
                    component="div"
                    count={program?.length}
                    rowsPerPage={rowsPerPage}
                    page={page}
                    onPageChange={handleChangePage}
                    onRowsPerPageChange={handleChangeRowsPerPage}
                />
            </TableContainer>
        </Box>
    );
}

